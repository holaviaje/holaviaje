// <auto-generated />
using System;
using HolaViaje.Catalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HolaViaje.Catalog.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250227201716_AddExperienceAndTranslationEntity")]
    partial class AddExperienceAndTranslationEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HolaViaje.Catalog.Features.Experiences.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("InstantTicketDelivery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("integer");

                    b.Property<bool>("MobileTicket")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uuid");

                    b.Property<bool>("PickupAvailable")
                        .HasColumnType("boolean");

                    b.Property<bool>("WheelchairAccessible")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Experiences", (string)null);
                });

            modelBuilder.Entity("HolaViaje.Catalog.Features.Experiences.ExperienceTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CancellationPolicyDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("CancellationPolicyName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<Guid>("ExperienceId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImportantInformation")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("LiveGuide")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("WhatToExpect")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("ExperienceTranslations", (string)null);
                });

            modelBuilder.Entity("HolaViaje.Catalog.Features.Experiences.Experience", b =>
                {
                    b.OwnsOne("HolaViaje.Catalog.Features.Experiences.TimeRange", "TimeRange", b1 =>
                        {
                            b1.Property<Guid>("ExperienceId")
                                .HasColumnType("uuid");

                            b1.Property<int?>("Duration")
                                .HasColumnType("integer")
                                .HasColumnName("Duration");

                            b1.Property<TimeOnly?>("EndTime")
                                .HasColumnType("time without time zone")
                                .HasColumnName("EndTime");

                            b1.Property<TimeOnly?>("StartTime")
                                .HasColumnType("time without time zone")
                                .HasColumnName("StartTime");

                            b1.HasKey("ExperienceId");

                            b1.ToTable("Experiences");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceId");
                        });

                    b.OwnsOne("HolaViaje.Catalog.Shared.BookInfo", "BookInfirmation", b1 =>
                        {
                            b1.Property<Guid>("ExperienceId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .HasColumnType("text")
                                .HasColumnName("Email");

                            b1.Property<string>("Phone")
                                .HasColumnType("text")
                                .HasColumnName("Phone");

                            b1.Property<string>("WhatsApp")
                                .HasColumnType("text")
                                .HasColumnName("WhatsApp");

                            b1.HasKey("ExperienceId");

                            b1.ToTable("Experiences");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceId");
                        });

                    b.OwnsOne("HolaViaje.Catalog.Shared.CancellationPolicy", "CancellationPolicy", b1 =>
                        {
                            b1.Property<Guid>("ExperienceId")
                                .HasColumnType("uuid");

                            b1.Property<int>("DaysToCancel")
                                .HasColumnType("integer")
                                .HasColumnName("DaysToCancel");

                            b1.Property<int>("Policy")
                                .HasColumnType("integer")
                                .HasColumnName("CancellationPolicyType");

                            b1.Property<int>("RefundPercentage")
                                .HasColumnType("integer")
                                .HasColumnName("RefundPercentage");

                            b1.HasKey("ExperienceId");

                            b1.ToTable("Experiences");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceId");
                        });

                    b.OwnsOne("HolaViaje.Global.Shared.EntityControl", "Control", b1 =>
                        {
                            b1.Property<Guid>("ExperienceId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("CreatedAt");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("DeletedAt");

                            b1.Property<bool>("IsDeleted")
                                .HasColumnType("boolean")
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime>("LastModifiedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("LastModifiedAt");

                            b1.HasKey("ExperienceId");

                            b1.ToTable("Experiences");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceId");
                        });

                    b.OwnsMany("HolaViaje.Catalog.Shared.Photo", "Photos", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("FileId")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("ImageUrl")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("character varying(2000)");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ExperiencePhotos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("BookInfirmation");

                    b.Navigation("CancellationPolicy");

                    b.Navigation("Control")
                        .IsRequired();

                    b.Navigation("Photos");

                    b.Navigation("TimeRange");
                });

            modelBuilder.Entity("HolaViaje.Catalog.Features.Experiences.ExperienceTranslation", b =>
                {
                    b.HasOne("HolaViaje.Catalog.Features.Experiences.Experience", "Experience")
                        .WithMany("Translations")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HolaViaje.Global.Shared.PlaceInfo", "Place", b1 =>
                        {
                            b1.Property<Guid>("ExperienceTranslationId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Country")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("State")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("ExperienceTranslationId");

                            b1.ToTable("ExperienceTranslations");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceTranslationId");

                            b1.OwnsOne("HolaViaje.Global.Shared.LocationInfo", "Location", b2 =>
                                {
                                    b2.Property<Guid>("PlaceInfoExperienceTranslationId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Latitude")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)");

                                    b2.Property<string>("Longitude")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)");

                                    b2.HasKey("PlaceInfoExperienceTranslationId");

                                    b2.ToTable("ExperienceTranslations");

                                    b2.WithOwner()
                                        .HasForeignKey("PlaceInfoExperienceTranslationId");
                                });

                            b1.Navigation("Location");
                        });

                    b.OwnsOne("HolaViaje.Catalog.Features.Experiences.Pickup", "Pickup", b1 =>
                        {
                            b1.Property<Guid>("ExperienceTranslationId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address1")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Address2")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Details")
                                .HasColumnType("text");

                            b1.HasKey("ExperienceTranslationId");

                            b1.ToTable("ExperienceTranslations");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceTranslationId");

                            b1.OwnsOne("HolaViaje.Global.Shared.PlaceInfo", "Place", b2 =>
                                {
                                    b2.Property<Guid>("PickupExperienceTranslationId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Country")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("State")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("PickupExperienceTranslationId");

                                    b2.ToTable("ExperienceTranslations");

                                    b2.WithOwner()
                                        .HasForeignKey("PickupExperienceTranslationId");

                                    b2.OwnsOne("HolaViaje.Global.Shared.LocationInfo", "Location", b3 =>
                                        {
                                            b3.Property<Guid>("PlaceInfoPickupExperienceTranslationId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Latitude")
                                                .IsRequired()
                                                .HasMaxLength(30)
                                                .HasColumnType("character varying(30)");

                                            b3.Property<string>("Longitude")
                                                .IsRequired()
                                                .HasMaxLength(30)
                                                .HasColumnType("character varying(30)");

                                            b3.HasKey("PlaceInfoPickupExperienceTranslationId");

                                            b3.ToTable("ExperienceTranslations");

                                            b3.WithOwner()
                                                .HasForeignKey("PlaceInfoPickupExperienceTranslationId");
                                        });

                                    b2.Navigation("Location");
                                });

                            b1.Navigation("Place")
                                .IsRequired();
                        });

                    b.OwnsMany("HolaViaje.Catalog.Features.Experiences.Service", "Services", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("Included")
                                .HasColumnType("boolean");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ExperienceServices", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("HolaViaje.Catalog.Features.Experiences.Stop", "Stops", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("AdditionalInfo")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Description")
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)");

                            b1.Property<int?>("Duration")
                                .HasColumnType("integer");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ExperienceStops", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("HolaViaje.Global.Shared.PlaceInfo", "Place", b2 =>
                                {
                                    b2.Property<int>("StopId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("City")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Country")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("State")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("StopId");

                                    b2.ToTable("ExperienceStops");

                                    b2.WithOwner()
                                        .HasForeignKey("StopId");

                                    b2.OwnsOne("HolaViaje.Global.Shared.LocationInfo", "Location", b3 =>
                                        {
                                            b3.Property<int>("PlaceInfoStopId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Latitude")
                                                .IsRequired()
                                                .HasMaxLength(30)
                                                .HasColumnType("character varying(30)");

                                            b3.Property<string>("Longitude")
                                                .IsRequired()
                                                .HasMaxLength(30)
                                                .HasColumnType("character varying(30)");

                                            b3.HasKey("PlaceInfoStopId");

                                            b3.ToTable("ExperienceStops");

                                            b3.WithOwner()
                                                .HasForeignKey("PlaceInfoStopId");
                                        });

                                    b2.Navigation("Location");
                                });

                            b1.Navigation("Place")
                                .IsRequired();
                        });

                    b.OwnsMany("HolaViaje.Catalog.Shared.AdditionalInfo", "AdditionalInfos", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ExperienceAdditionalInfos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("AdditionalInfos");

                    b.Navigation("Experience");

                    b.Navigation("Pickup")
                        .IsRequired();

                    b.Navigation("Place")
                        .IsRequired();

                    b.Navigation("Services");

                    b.Navigation("Stops");
                });

            modelBuilder.Entity("HolaViaje.Catalog.Features.Experiences.Experience", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
